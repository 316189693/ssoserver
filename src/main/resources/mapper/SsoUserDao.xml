<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.ssoserver.dao.SsoUserDao">
  <resultMap id="BaseResultMap" type="com.example.ssoserver.entity.SsoUser">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="salt" jdbcType="VARCHAR" property="salt" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="first_name" jdbcType="VARCHAR" property="first_name" />
    <result column="last_name" jdbcType="VARCHAR" property="last_name" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="created_date_time" jdbcType="TIMESTAMP" property="created_date_time" />
    <result column="create_user_id" jdbcType="INTEGER" property="create_user_id" />
    <result column="active" jdbcType="INTEGER" property="active" />
  </resultMap>

  <resultMap id="App" type="com.example.ssoserver.entity.App">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="url" jdbcType="VARCHAR" property="url" />
    <result column="logOutUrl" jdbcType="VARCHAR" property="logOutUrl" />
    <result column="note" jdbcType="VARCHAR" property="note" />
    <result column="active" jdbcType="INTEGER" property="active" />
  </resultMap>

  <resultMap id="SsoUserAppResult" type="com.example.ssoserver.entity.SsoUser">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="salt" jdbcType="VARCHAR" property="salt" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <collection property="appList" javaType="ArrayList" ofType="App">
         <id property="id" column="app_id"/>
         <result property="name" column="name"/>
         <result property="url" column="url"/>
    </collection>
  </resultMap>


  <sql id="Base_Column_List">
    id, `password`, salt, username, first_name, last_name, email, created_date_time, 
    create_user_id, active
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sso_user
    where id = #{id,jdbcType=INTEGER}
  </select>

  <select id="selectByUserNameOrEmail" resultMap="SsoUserAppResult">
    select sso_user.id, sso_user.`password`,sso_user.salt, sso_user.username, app.url, app.logOutUrl, app.name, app.id as app_id
    from sso_user_app_link
    inner join sso_user on sso_user.id = sso_user_app_link.user_id
    inner join app on app.id = sso_user_app_link.app_id
    where sso_user.username =  #{userName} or email = #{email}
           and sso_user.active = 1 and app.active = 1;
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from sso_user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.example.ssoserver.entity.SsoUser" useGeneratedKeys="true">
    insert into sso_user (`password`, salt, username, 
      first_name, last_name, email, 
      created_date_time, create_user_id, active
      )
    values (#{password,jdbcType=VARCHAR}, #{salt,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR}, 
      #{first_name,jdbcType=VARCHAR}, #{last_name,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, 
      #{created_date_time,jdbcType=TIMESTAMP}, #{create_user_id,jdbcType=INTEGER}, #{active,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.example.ssoserver.entity.SsoUser" useGeneratedKeys="true">
    insert into sso_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="password != null">
        `password`,
      </if>
      <if test="salt != null">
        salt,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="first_name != null">
        first_name,
      </if>
      <if test="last_name != null">
        last_name,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="created_date_time != null">
        created_date_time,
      </if>
      <if test="create_user_id != null">
        create_user_id,
      </if>
      <if test="active != null">
        active,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="salt != null">
        #{salt,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="first_name != null">
        #{first_name,jdbcType=VARCHAR},
      </if>
      <if test="last_name != null">
        #{last_name,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="created_date_time != null">
        #{created_date_time,jdbcType=TIMESTAMP},
      </if>
      <if test="create_user_id != null">
        #{create_user_id,jdbcType=INTEGER},
      </if>
      <if test="active != null">
        #{active,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.ssoserver.entity.SsoUser">
    update sso_user
    <set>
      <if test="password != null">
        `password` = #{password,jdbcType=VARCHAR},
      </if>
      <if test="salt != null">
        salt = #{salt,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="first_name != null">
        first_name = #{first_name,jdbcType=VARCHAR},
      </if>
      <if test="last_name != null">
        last_name = #{last_name,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="created_date_time != null">
        created_date_time = #{created_date_time,jdbcType=TIMESTAMP},
      </if>
      <if test="create_user_id != null">
        create_user_id = #{create_user_id,jdbcType=INTEGER},
      </if>
      <if test="active != null">
        active = #{active,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.ssoserver.entity.SsoUser">
    update sso_user
    set `password` = #{password,jdbcType=VARCHAR},
      salt = #{salt,jdbcType=VARCHAR},
      username = #{username,jdbcType=VARCHAR},
      first_name = #{first_name,jdbcType=VARCHAR},
      last_name = #{last_name,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      created_date_time = #{created_date_time,jdbcType=TIMESTAMP},
      create_user_id = #{create_user_id,jdbcType=INTEGER},
      active = #{active,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>